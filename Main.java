import java.util.Random;
import java.util.Scanner;
import static java.lang.Math.abs;

public class Main {
    public static boolean isMoveCorrect(int y, int x, int currentY, int currentX) {
        y--;
        x--;
        if (abs(abs(currentX-x) - abs(currentY - y)) == 1) {
            return true;
        }
        return false;
    }

    public static void main(String[] args) {
        Monster monster = new Monster();
        Castle castle = new Castle();
        Person person = new Person();
        Random rand = new Random();
        Scanner sc = new Scanner(System.in);

        System.out.println("–ü—Ä–∏–≤–µ—Ç, –±—É–¥–µ—à—å –∏–≥—Ä–∞—Ç—å? (–û—Ç–≤–µ—Ç—å \"–î–∞\" –∏–ª–∏ \"–ù–µ—Ç\") ");
        String ans;
        boolean isReady = false;
        boolean isCorrectAns = false;
        while (!isCorrectAns){
            ans = sc.next();
            switch (ans) {
                case ("–î–∞"): {
                    System.out.println("–£—Ä–∞!");
                    isReady = true;
                    isCorrectAns = true;
                    break;
                } case ("–ù–µ—Ç"): {
                    System.out.print("–ñ–∞–ª—å, –ø—Ä–∏—Ö–æ–¥–∏ –µ—â–µ!");
                    isCorrectAns = true;
                    break;
                } default: {
                    System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç. –ü–æ—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑–æ–∫ \"–î–∞\" –∏–ª–∏ \"–ù–µ—Ç\".");
                }
            }
        }
        int boardSize=1;
        if (isReady){
            // –∏–≥—Ä–∞–µ–º
            monster.difficultGame= 0;// –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 0!!!
            System.out.println("–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç 1 –¥–æ 3");
            while (monster.difficultGame < 1 || monster.difficultGame > 3) {
                monster.difficultGame = sc.nextInt();
                if (monster.difficultGame <= 3 && monster.difficultGame >= 1) {
                    System.out.println("–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: " + monster.difficultGame);
                } else {
                    System.out.println("–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –æ—Ç 1 –¥–æ 3!");
                }
            }
            switch (monster.difficultGame){
                case(1):{
                    monster.maxDemon=1;
                    monster.maxTroll=2;
                    monster.maxZombi=3;
                    boardSize=5;
                    person.HP=4;
                    break;
                } case(2):{
                    monster.maxDemon=2;
                    monster.maxTroll=3;
                    monster.maxZombi=4;
                    boardSize=8;
                    person.HP=3;
                    break;
                } case(3):{
                    monster.maxDemon=3;
                    monster.maxTroll=4;
                    monster.maxZombi=5;
                    boardSize=11;
                    person.HP=3;
                    break;
                } default: {}
            }

            System.out.println("–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏–≥—Ä—ã, –∏–∑—É—á–∏ –≤—Ä–∞–≥–æ–≤ —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–π–¥–µ—Ç—Å—è —Å—Ç–æ–ª–∫–Ω—É—Ç—Å—è" + "\n" +
                    "üòà - –¥–µ–º–æ–Ω, –µ–≥–æ –Ω–µ–ª—å–∑—è –ø–æ–±–µ–¥–∏—Ç—å, —Å–Ω–∏–º–∞–µ—Ç –≤—Å–µ —Å–µ—Ä–¥—Ü–∞" + "\n" +
                    "üßå - —Ç—Ä–æ–ª–ª—å, –æ–Ω –¥–∞–µ—Ç —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Å–Ω–∏–º–∞–µ—Ç –ø–æ –¥–≤–∞ —Å–µ—Ä–¥—Ü–∞" + "\n" +
                    "üßü - –∑–æ–º–±–∏, –æ–Ω –¥–∞–µ—Ç –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Å–Ω–∏–º–∞–µ—Ç –ø–æ –æ–¥–Ω–æ–º—É —Å–µ—Ä–¥—Ü—É");
            System.out.println("–†–∞–∑–º–µ—Ä –ø–æ–ª—è " + boardSize + "x" + boardSize);
            System.out.println("–£ —Ç–µ–±—è " + person.HP + " —Å–µ—Ä–¥—Ü–∞(-–µ—Ü)");
        }else {
            return;
        }
            castle.image = "\uD83C\uDFF0";
            person.image = "\uD83E\uDD77"; //ü•∑
            monster.demon = "\uD83D\uDE08"; //üòà
            monster.zombi = "\uD83E\uDDDF\u200D"; //üßü‚Äç
            monster.troll = "\uD83E\uDDCC"; //üßå
            String space = "  ";
            castle.x = 0;
            castle.y = 0;
            person.x = 0;
            person.y = boardSize - 1;

            String[][] board = new String[boardSize][boardSize];
        //–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª—è –ø—Ä–æ–±–µ–ª–∞–º–∏
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < boardSize; j++) {
                board[i][j] = space;
            }
        }

            // –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏
        for (int i = 0; i < boardSize; i++) {
            for (int j = 0; j < monster.maxDemon; j++) {
                int x = rand.nextInt(boardSize-1);
                board[i][x]=monster.demon;
            }for (int j = 0; j < monster.maxTroll; j++) {
                int x = rand.nextInt(boardSize-1);
                board[i][x]=monster.troll;
            }for (int j = 0; j < monster.maxZombi; j++) {
                int x = rand.nextInt(boardSize-1);
                board[i][x]=monster.zombi;
            }
        }
            castle.x = rand.nextInt(boardSize - 1);
            person.x = rand.nextInt(boardSize - 1);
            board[castle.y][castle.x] = castle.image;
            board[person.y][person.x] = person.image;

            // –æ—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ '–∏–≥—Ä—ã'
            while (person.HP > 0 && (person.x != castle.x || person.y != castle.y)) {
                for (int y = 0; y < boardSize; y++) {
                    System.out.print(" +");
                    for (int i = 0; i < boardSize; i++) {
                        System.out.print(" ‚Äî‚Äî +");
                    }
                    System.out.println();
                    System.out.print(" | ");
                    // –≤—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–µ–º—ã—á–∫—É
                    // —Ü–∏–∫–ª –≤—ã–≤–æ–¥–∏—Ç –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å —Å–µ—Ç–∫–∏
                    for (int x = 0; x < boardSize; x++) {
                        System.out.print(board[y][x] + " | ");
                        if (x + 1 == boardSize)
                            System.out.print("\n");
                    }

                }
                System.out.print(" +");
                for (int i = 0; i < boardSize; i++) {
                    System.out.print(" ‚Äî‚Äî +");
                }
                System.out.println();
                System.out.println("–í–≤–µ–¥–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è(—Ä—è–¥ –∏ —Å—Ç–æ–ª–±–µ—Ü):  ");
                int y = sc.nextInt();
                int x = sc.nextInt();
                while(!isMoveCorrect(y-1,x-1,person.y, person.x)){
                    board[person.y][person.x] = space;
                    board[y-1][x-1] = person.image;
                    person.y = y-1;
                    person.x = x-1;
                    if(!(isMoveCorrect(y-1,x-1,person.y, person.x))){
                        System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã! –í–≤–µ–¥–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ!");
                        y = sc.nextInt();
                        x = sc.nextInt();
                    }
                }
                board[person.y][person.x]=space;
                person.x=x-1;
                person.y=y-1;

                //—Ö–æ–¥

                if (board[person.y][person.x] == monster.zombi){
                    while (!monster.taskZombi() && person.HP > 0){
                        person.HP--;
                        System.out.println("–£ —Ç–µ–±—è " + person.HP + " —Å–µ—Ä–¥—Ü–∞(-–µ—Ü)");
                    }
                }else if (board[person.y][person.x] == monster.troll){
                    while(!monster.taskTroll() && person.HP > 0){
                        person.HP-=2;
                        System.out.println("–£ —Ç–µ–±—è " + person.HP + " —Å–µ—Ä–¥—Ü–∞(-–µ—Ü)");
                    }
                }else if (board[person.y][person.x] == monster.demon){
                    person.HP=0;
                    System.out.println("–¢–µ–±—è —Å—ä–µ–ª –¥–µ–º–æ–Ω");
                    System.out.println("–£ —Ç–µ–±—è " + person.HP + " —Å–µ—Ä–¥—Ü–∞(-–µ—Ü)");
                }
                if (person.HP > 0){
                    board[person.y][person.x]=person.image;
                }
            }if (castle.x==person.x && castle.y == person.y)
                board[castle.y][castle.x]= castle.image;
            for (int y = 0; y < boardSize; y++) {
                System.out.print(" +");
                for (int i = 0; i < boardSize; i++) {
                    System.out.print(" ‚Äî‚Äî +");
                }// –≤—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–µ–º—ã—á–∫—É
                System.out.println();
                System.out.print(" | ");

                // —Ü–∏–∫–ª –≤—ã–≤–æ–¥–∏—Ç –æ—Å–Ω–æ–≤–Ω—É—é —á–∞—Å—Ç—å —Å–µ—Ç–∫–∏
                for (int x = 0; x < boardSize; x++) {
                    System.out.print(board[y][x] + " | ");
                    if (x + 1 == boardSize)
                        System.out.print("\n");
                }
            }
            System.out.print(" +");
            for (int i = 0; i < boardSize; i++) {
                System.out.print(" ‚Äî‚Äî +");
            }
            System.out.println();
            if (person.HP <= 0){
                System.out.println("–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂ —É–º–µ—Ä, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª :(");
            }else{
                System.out.println("–¢—ã –ø–æ–±–µ–¥–∏–ª!");
            }


    }
}
